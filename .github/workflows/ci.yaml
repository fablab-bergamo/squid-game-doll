name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # Cache pip dependencies
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install Poetry
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    # Configure Poetry
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    # Cache Poetry virtual environment
    - name: Cache Poetry venv
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    # Install dependencies
    - name: Install dependencies
      run: |
        poetry install --extras standard
        poetry run pip install ultralytics --no-deps
        poetry run pip install tqdm seaborn psutil py-cpuinfo thop requests PyYAML

    # Run tests
    - name: Run tests
      run: poetry run pytest